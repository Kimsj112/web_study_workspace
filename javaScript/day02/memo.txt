함수
  JS 함수는 일급 객체이다.
  일급 객체는 값으로 사용할 수 있는것을 의미한다.
  즉, 함수는 객체이며 변수에 저장하거나, 매개변수로 전달하거나, 반환하는것이 가능하다.

일반 함수 정의

  function 함수이름(매개변수){
    실행할 코드;
    return 반환값;
  }

익명 함수 정의
  이름이 없는 함수이며 보통 변수에 저장해서 사용한다.
   let 변수명 = function (매개변수) {
    실행할 코드;
    return 반환값;
   }

⭐콜백 함수⭐
  함수의 매개변수로 전달되는 함수를 콜백 함수라고 한다.

즉시실행 함수
  한 번만 사용하는 함수는 즉시 실행 함수로 만들면 된다.
  즉시 실행 함수는 만듬과 동시에 실행 된다.
  재사용할 목적이 없으므로 익명함수로 만든다.
  (function (매개변수){
    실행할 코드;
  })(매개변수로 넘겨줄 값);

⭐화살표 함수⭐
  익명함수를 더 편하게 만들 수 있는 표기법(자바의 람다식과 유사함)
  () => {}


JS 객체
  자바스크립트는 원시타입 값을 제외한 모든 값이 객체이다.
  객체는 프러퍼티(property)와 메서드로 구성된다.
  프로퍼티는 키와 값으로 구성되며 값의 위치에 함수가 올 수 있다.
  프로퍼티의 값이 함수인 경우 일반 함수와 구분하기 위해 메서드라고 부른다.
  num1: 10, // 키 : 값 -> 프로퍼티

객체 생성
  자바에서는 클래스를 먼저 정의하고 필요할 때 
  new연산자와 함께 생성자를 호출하여 인스턴스를 만들었다.
  JS는 클래스가 없어도 다양하 방법으로 객체를 만들 수 있다.
  가장 간단하고 일반적인 방법은 객체 리터럴을 이용한 생성이다.
  객체 리터럴은 {}를 이용하여 표현한다.

객체 사용
  1. '.'을 사용한다.
    일반적인 사용 방법

  2. []를 사용한다.
    []를 사용하면 key를 반드시 문자열로 사용해야한다.

===============================================================================

⭐이벤트⭐
  발생한 사건을 말한다.
  사용자가 버튼을 클릭하거나 항목을 선택하는 등의 사건을 이벤트라고 한다.
  이러한 이벤트가 발생하면 자바스크립트의 코드가 실행되도록 구현하여
  사용자와 상호작용하는 페이지를 만들 수 있다.

- 마우스 이벤트
  1. click : 요소를 클릭하면 발생
  2. mouseover : 마우스 커서를 해당 요소에 올리면 발생
  3. mouseout : 마우스 커서가 해당 요소에 영역을 벗어나면 발생
  ...

- 키보드 이벤트
  1. keydown : 키보드를 누르는 동안 발생
  2. keyup : 키보드를 눌렀다가 땔 때 발생
  3. keypress : 키보드를 눌렀을 때 발생

- 문서 로딩 이벤트
  1. load : 문서(웹 페이지)가 로딩이 끝나면 발생
  2. unload : 문서를 벗어날 때 발생
  3. scroll : 문서가 스크롤되면 발생
  ...

- 폼 이벤트
  1. focus : 폼 요소에 포커스가 되면 발생
  2. blur : 포커스를 잃으면 발생
  3. change : 입력 값이 바뀌거나 체크 상태가 변경되면 발생
  4. submit : submit버튼을 누르면 발생(form태그에서 발생됨)

⭐DOM과 이벤트⭐
기존의 이벤트 처리 방식은 HTML코드에 JS를 사용하였다.
이런 방식은 가독성, 유지보수에 좋지않다.
DOM을 사용하면 JS에 HTML요소를 불러와서 이벤트를 처리할 수 있다.

DOM 이란?
Document Object Model
웹 문서를 하나의 객체로 만든것이다. JS객체이기 때문에 여러 프로퍼티와 메소드를 제공한다.

DOM 트리
  DOM은 웹 문서의 구조와 정보들을 트리형태로 저장한다.

DOM 사용하기
  ducument.메서드()
  DOM에서는 HTML요소를 선택자로 이용해 접근하는 여러 메서드를 제공한다.

HTML요소를 자바스크립트 객체로 가져오기
  1. getElementById('id명')
  2. getElementByClassName('class명')
  3. querySelector('선택자')
  4. querySelectorAll('선택자')