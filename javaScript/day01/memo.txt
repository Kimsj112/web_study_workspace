JavaScript
  웹 브라우저에서 동작하는 프로그래밍 언어이다.
  인터프리터 언어(스크립트 언어)이며 브라우저에서 제공하는 엔진에 의해 실행된다.
  모든 브라우저는 JS를 실행할 수 있는 엔진을 가지고 있다.    
  처음에는 웹 페이지의 html요소들을 제어하는 용도로 만들어졌으며,
  JS가 탄생하면서 사용자의 행위에 따라 반응하는 
  웹사이트(사용자와 상호작용하는 웹사이트)를 만들 수 있게 되었다.
  지금의 JS는 웹 브라우저 뿐만 아니라 다양한 곳에서 사용이 되고 있다.   

ECMAScript
  ECMAScript는 Ecma 인터내셔널이라는 단체에서 제공하는 
  웹브라우저용 프로그래밍 언어의 표준이다.(ECMAScript 자체가 언어이다.)
  핵심문법을 규정하여 모든 브라우저 회사는 ECMAScript를 준수해서 엔진을 구현한다.
  JS는 ECMAScript에 다른 기술이 합쳐져서 만들어진다.
  ECMAScript의 버전을 ES6, ES11 등으로 표기하며 버전이 올라가면 JS도 변화가 생긴다.

  Node.js
    JS가 웹 브라우저 없이도 작동할 수 있는 환경을 제공한다.
    크롬의 V8엔진을 기반으로 작동한다.

nodejs 버전 확인
  cmd > node -v > 버전뜨면 설치 완료

=======================================================================
JS의 자료형(data type)
- 원시 타입
  1. number : 정수, 실수 구분 없이 숫자 타입
    Infinity(무한), 
    NaN(Not a Number, 숫자가 아니어서 연산 불가) 이라는 특별한 값도 포함한다.

  2. stirng : 문자열

  3. boolean : true, false

  4. undefined : undefined타입의 값은 undefined만 존재한다.
                타입이 없음을 의미하는 값
  5. null : null 타입의 값은 null만 존재한다.
            의도적으로 값이 없음을 의미하는 값

- 객체 타입
  JS는 여러 언어의 영향을 받았다.
  명령형, 함수형, 객체지향 등을 지원하는 멀티 패러다임 프로그래밍 언어이다.
  JS를 구성하는 거의 모든 것이 객체이다.
  object : 객체 타입

typeof : 타입을 확인하는 연산자

JS의 문자열 타입  
  JS에서는 문자열을 큰 따옴표, 작은 따옴표, 백틱 모두 사용가능하다.
  "안녕", '안녕', `안녕`
  백틱을 사용한 문자열 표현은 템플릿 리터럴 이라고 부른다.

템플릿 리터럴(템플릿 문자열)
  - 백틱을 사용한 문자열, 엔터를 통해 줄바꿈 처리가 가능하다.
  - ${}를 사용하여 값과 식을 삽입할 수 있다.

===========================================================================

  변수와 상수 선언
    JS는 변수를 만들 때 자료형을 명시하지 않는다.
    변수에 값이 저장될 때 값의 자료형에 따라 변수의 타입이 정해진다.

  타입추론과 동적타입
    JS는 변수를 선언할 때가 아니라 변수에 데이터가 할당될 때 타입이 결정(타입 추론)된다는 특징이 있다. 
    이런 특징 때문에 JS를 동적타입 언어라고도 부른다.

  변수
    var a;
    let a;
    JS에서 변수를 만들 때는 let 또는 var 키워드를 사용한다.

  상수
    const A=5;

  var키워드의 단점
    대표적인 단점은 var로 만든 변수는 함수 레벨 스코프를 지원한다는 것이다.
    그러므로 변수를 만들 때 let을 사용하는걸 권장한다.

    - 함수 레벨 스코프 : 변수가 만들어진 함수 영역 전체에서 유효함
    - 블록 레벨 스코프 : 변수가 만들어진 {}영역에서 유효함
    * 스코프 -> 유효범위

  ⭐변수의 선언과 호이스팅⭐
  JS의 변수와 함수 선언문은 코드 실행단계 이전에 먼저 실행이 된다.
  이러한 특징을 호이스팅 이라고 한다.
  var 키워드로 변수를 만들면 호이스팅과 동시에 undefined로 초기화를 시킨다.
  let키워드로 변수를 만들면 호이스팅이 되지만 초기화 시키지 않는다.

  =====================================================================================
  연산자
  1. 최우선 연산자 : ()

  2. 산술 연산자 : +, -, *, /, %
  ⭐ 특이사항
    문자열과 숫자 연산이 가능함
    '10' * 1 = 10
    '10' - 5 = 5
    '10' + 5 = 105 (연결연산자로 사용되어 더하기는 연결처리)
  3. 단항 연산자
    ++, -- (전위형, 후위형)

  4. 대입 연산자
    =, +=, -=, *=, /=, %=

  5. 관계 연산자
    >, <, >=, <=

    ==, !=
      값이 일치하는지 비교
      1 == 1 -> true
      1 == '1' -> true

    ===, !==
      값과 타입이 일치하는지 비교
      1 === 1 -> true
      1 === '1' -> false

  6. 논리 연산자
    ||, &&, !

  7. 삼항 연산자
    조건식 ? 참일 때 값 : 거짓일 때 값

  8. 지수 연산자
    **
    2**2 === 4
    2**3 === 8

블록문
  단순히 중괄호 한쌍을 사용한 것
  변수를 만들 때 전역 변수로 사용하기 싫다면 블록 내부에서 선언하면 된다.
  그러면 해당 블록 내에서만 사용가능한 지역 변수로 생성된다.
  {
    let foo = 10;
  }

제어문
  * 조건문
    1. if ~ else if ~ else 문
    2. switch 문

  * 반복문
    1. for 문
    2. while 문
    3. do~while 문

  * 기타 제어문
    1. break;
    2. continue;

Truthy와 Falsy
  true와 false가 아니지만 true와 false로 인정하는 값을 의미한다.

  Falsy : 0, '', null, undefined, NaN
  Truthy : Falsy를 제외한 나머지

========================================================================================
배열
  JS의 배열은 자바의 리스트에 가깝다.
  배열이 저장하는 값을 요소(element)라고 부르며 요소로 저장하는 값은
  원시타입의 값뿐만 아니라 객체타입도 가능하다.

